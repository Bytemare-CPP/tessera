name: Tessera CI/CD

on:
  push:
    branches: [ main, deploy ]
  pull_request:
    branches: [ main ]

jobs:
  setup:
    name: Setup, Test & Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
          cache: 'npm'

      - name: Install frontend deps and test
        run: |
          npm ci
          npm test
        env:
          VITE_SUPABASE_URL: "https://example.supabase.co"
          VITE_SUPABASE_KEY: "dummy-key-for-testing"

      - name: Build frontend
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_KEY: ${{ secrets.VITE_SUPABASE_KEY }}

      - name: Build server
        run: |
          cd server
          npm ci
          npm run build

      - name: Create Nginx configuration
        run: |
          mkdir -p nginx
          cat > nginx/tessera.conf << 'EOT'
          # HTTP server - redirect to HTTPS
          server {
              listen 80;
              server_name tessera.it.com www.tessera.it.com;
              
              # Redirect all HTTP requests to HTTPS
              return 301 https://$host$request_uri;
          }

          # Default server for IP address access - no HTTPS available for raw IP
          server {
              listen 80 default_server;
              listen [::]:80 default_server;
              server_name _;
              
              # API requests
              location /api/ {
                  proxy_pass http://localhost:4000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "upgrade";
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  client_max_body_size 10M;
              }
              
              # Frontend files
              location / {
                  root /home/ec2-user/tessera/dist;
                  index index.html;
                  try_files $uri $uri/ /index.html;
              }
          }

          # HTTPS server
          server {
              listen 443 ssl;
              listen [::]:443 ssl;
              server_name tessera.it.com www.tessera.it.com;
              
              # SSL certificate files
              ssl_certificate /etc/letsencrypt/live/tessera.it.com/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/tessera.it.com/privkey.pem;
              include /etc/letsencrypt/options-ssl-nginx.conf;
              ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
              
              # API requests
              location /api/ {
                  proxy_pass http://localhost:4000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "upgrade";
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  client_max_body_size 10M;
              }
              
              # Frontend files
              location / {
                  root /home/ec2-user/tessera/dist;
                  index index.html;
                  try_files $uri $uri/ /index.html;
              }
          }
          EOT

      - name: Upload frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: dist/

      - name: Upload server build
        uses: actions/upload-artifact@v4
        with:
          name: server
          path: server/

      - name: Upload package files
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: |
            package.json
            package-lock.json

      - name: Upload nginx config
        uses: actions/upload-artifact@v4
        with:
          name: nginx
          path: nginx/

  deploy:
    name: Deploy to EC2
    if: github.ref == 'refs/heads/deploy'
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend
          path: dist/

      - uses: actions/download-artifact@v4
        with:
          name: server
          path: server/

      - uses: actions/download-artifact@v4
        with:
          name: packages
          path: ./

      - uses: actions/download-artifact@v4
        with:
          name: nginx
          path: nginx/

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add EC2 host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "mkdir -p ~/tessera/server ~/tessera/dist"

          rsync -avz dist/ ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/tessera/dist/
          rsync -avz package.json package-lock.json ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/tessera/
          rsync -avz server/ ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/tessera/server/
          rsync -avz nginx/tessera.conf ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/tessera.conf

          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
            echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" > ~/tessera/server/.env
            echo "SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" >> ~/tessera/server/.env
            echo "VIBE_MATCHER_URL=http://localhost:8000" >> ~/tessera/server/.env
            echo "ALLOWED_ORIGINS=http://tessera.it.com,https://tessera.it.com,http://www.tessera.it.com,https://www.tessera.it.com,http://54.82.27.27" >> ~/tessera/server/.env

            cd ~/tessera/server
            npm ci --production

            pm2 delete tessera-api || true
            pm2 start dist/index.js --name tessera-api
            pm2 save

            sudo mv ~/tessera.conf /etc/nginx/conf.d/tessera.conf
            sudo nginx -t && sudo systemctl restart nginx
          EOF
